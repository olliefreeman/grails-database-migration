buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven {url "https://repo.grails.org/grails/core"}
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:$gormVersion"
        classpath "org.hibernate:hibernate-core:$hibernateVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id "com.jfrog.bintray" version "1.1"
    id 'project-report'
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'com.jfrog.bintray'

version "3.0.0-SNAPSHOT"
group "org.grails.plugins"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven {url "https://repo.grails.org/grails/core"}
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

configurations {
    documentation
}

dependencies {
    compile 'org.liquibase:liquibase-core:3.4.2'

    compile('org.liquibase.ext:liquibase-hibernate4:3.5') {
        exclude group: 'org.hibernate', module: 'hibernate-core'
        exclude group: 'org.hibernate.javax.persistence', module: 'hibernate-jpa-2.0-api'
        exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
        exclude group: 'org.hibernate', module: 'hibernate-envers'
        exclude group: 'org.liquibase', module: 'liquibase-core'
    }
    provided "org.grails.plugins:hibernate4:$gormVersion"
    provided "org.hibernate:hibernate-core:$hibernateVersion"

    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.grails:grails-plugin-testing"

    provided("org.grails:grails-shell") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    documentation "org.codehaus.groovy:groovy-all:2.4.6"
}


grailsPublish {
    userOrg = "olliefreeman"
    githubSlug = 'olliefreeman/grails-database-migration'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Database Migration Plugin"
    desc = "Grails Database Migration Plugin"
    developers = [kazukiyamamoto: "Kazuki YAMAMOTO",
                  olliefreeman  : "Ollie Freeman"]
    repo = 'maven'
}

asciidoctor {
    resources {
        from('src/docs/images')
        into "./images"
    }

    attributes 'experimental': 'true',
               'compat-mode': 'true',
               'toc': 'left',
               'icons': 'font',
               'version': project.version,
               'groupId': project.group,
               'artifactId': project.name,
               'sourcedir': "${projectDir}/src/main/groovy"
}

task apidocs(type: Groovydoc) {
    source project.files('src/main/groovy')

    destinationDir = new File(buildDir, 'docs/api')
    // Might need a classpath
    docTitle = "Grails Database Migration Plugin ${version}"

    classpath = configurations.documentation
    groovyClasspath = configurations.documentation
}

task docs(type: Copy, dependsOn: [apidocs, asciidoctor]) {
    from "$buildDir/asciidoc/html5"
    into "$buildDir/docs"
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/scripts'
        }
    }
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    group 'build'
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

/**
 * Add jars as artifacts, this will cause them to be built as part of assemble and will automatically be
 * included as part of the publishing mechanism.
 * For some reason, some change made has meant that any tars included stop the automatic addition of the standard
 * jar file, therefore we define it as required.
 */
artifacts {
    archives sourcesJar
    archives groovydocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

eclipse {
    classpath {
        plusConfigurations += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}