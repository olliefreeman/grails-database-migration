buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:$gormVersion"
        classpath "org.hibernate:hibernate-core:$hibernateVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id 'project-report'
}

version "2.0.4"
group "org.grails.plugins"

apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'
// Used for publishing to central repository, remove if not needed
//apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
//apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile 'org.liquibase:liquibase-core:3.4.2'
    compile('org.liquibase.ext:liquibase-hibernate4:3.5') {
        exclude group: 'org.hibernate', module: 'hibernate-core'
        exclude group: 'org.hibernate.javax.persistence', module: 'hibernate-jpa-2.0-api'
        exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
        exclude group: 'org.hibernate', module: 'hibernate-envers'
    }
    provided "org.grails.plugins:hibernate4:$gormVersion"
    provided "org.hibernate:hibernate-core:$hibernateVersion"

    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.grails:grails-plugin-testing"

    provided("org.grails:grails-shell") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

eclipse {
    classpath {
        plusConfigurations += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/scripts'
        }
    }
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    group 'build'
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

/**
 * Add jars as artifacts, this will cause them to be built as part of assemble and will automatically be
 * included as part of the publishing mechanism.
 * For some reason, some change made has meant that any tars included stop the automatic addition of the standard
 * jar file, therefore we define it as required.
 */
artifacts {
    archives sourcesJar
    archives groovydocJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = "grails-$project.name"
        userOrg = 'olliefreeman'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/olliefreeman/grails-database-migration'
        vcsUrl = 'https://github.com/olliefreeman/grails-database-migration.git'
        githubRepo = 'olliefreeman/grails-database-migration'
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = "grails-database-migration - ${project.name} ${project.version}"
            released = new Date()
            vcsTag = "${project.version}"
        }
    }
    configurations = ['archives']
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
}